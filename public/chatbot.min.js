class ChatbotService{constructor(t){if(!t.clientId)throw new Error("Client ID is required");console.log("config::: ",t),this.clientId=t.clientId,this.widgetId=t.widgetId||null,this.apiUrl=t.apiUrl||"https://localhost:3000/api/v1",this.position=t.position||"bottom-right",this.theme=t.theme||{primaryColor:"#007bff",backgroundColor:"#ffffff",textColor:"#000000"},this.botName=t.botName||"Chat Assistant",this.welcomeMessage=t.welcomeMessage||"Hello! How can I help you today?",this.isTyping=!1,this.initialize()}async initialize(){this.container=document.createElement("div"),this.container.id="chatbot-container",this.container.style.cssText=`\n      position: fixed;\n      ${this.position.includes("bottom")?"bottom: 20px;":"top: 20px;"}\n      ${this.position.includes("right")?"right: 20px;":"left: 20px;"}\n      z-index: 1000;\n      display: flex;\n      flex-direction: column;\n      align-items: flex-end;\n      opacity: 0;\n      transform: translateX(60px);\n      transition: opacity 0.6s cubic-bezier(.4,2,.6,1), transform 0.6s cubic-bezier(.4,2,.6,1);\n    `,this.button=document.createElement("button"),this.button.id="chatbot-button",this.button.setAttribute("aria-label","Open chatbot"),this.button.innerHTML='\n      <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" class="chatbot-robot-svg">\n        <g>\n          <ellipse cx="24" cy="28" rx="16" ry="12" fill="#e0e7ff"/>\n          <ellipse cx="24" cy="20" rx="12" ry="10" fill="#6366f1"/>\n          <ellipse cx="18" cy="20" rx="2.5" ry="3" fill="#fff"/>\n          <ellipse cx="30" cy="20" rx="2.5" ry="3" fill="#fff"/>\n          <ellipse cx="18" cy="20" rx="1.2" ry="1.5" fill="#6366f1"/>\n          <ellipse cx="30" cy="20" rx="1.2" ry="1.5" fill="#6366f1"/>\n          <rect x="20" y="26" width="8" height="2" rx="1" fill="#fff"/>\n          <rect x="22" y="10" width="4" height="6" rx="2" fill="#6366f1"/>\n        </g>\n      </svg>\n    ',this.button.style.cssText=`\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n      background-color: ${this.theme.primaryColor};\n      border: none;\n      color: white;\n      font-size: 24px;\n      cursor: pointer;\n      box-shadow: 0 4px 16px rgba(0,0,0,0.18);\n      align-self: flex-end;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: transform 0.2s cubic-bezier(.4,2,.6,1), box-shadow 0.2s;\n      outline: none;\n    `,this.button.onmouseenter=()=>{this.button.style.transform="scale(1.08) rotate(-4deg)",this.button.style.boxShadow="0 8px 32px rgba(99,102,241,0.18)"},this.button.onmouseleave=()=>{this.button.style.transform="scale(1)",this.button.style.boxShadow="0 4px 16px rgba(0,0,0,0.18)"},this.chatWindow=document.createElement("div"),this.chatWindow.id="chatbot-window",this.chatWindow.setAttribute("aria-modal","true"),this.chatWindow.setAttribute("role","dialog"),this.chatWindow.style.cssText=`\n      display: none;\n      width: 350px;\n      max-width: 95vw;\n      height: 500px;\n      background: linear-gradient(135deg, ${this.theme.backgroundColor} 80%, #f3f4f6 100%);\n      border-radius: 18px;\n      margin-bottom: 10px;\n      box-shadow: 0 8px 32px rgba(99,102,241,0.18);\n      overflow: hidden;\n      flex-direction: column;\n      animation: chatbot-slide-in 0.4s cubic-bezier(.4,2,.6,1);\n      transition: box-shadow 0.2s;\n    `;const t=document.createElement("div");t.style.cssText=`\n      padding: 15px;\n      background: linear-gradient(90deg, ${this.theme.primaryColor} 60%, #6366f1 100%);\n      color: white;\n      font-weight: bold;\n      display: flex;\n      align-items: center;\n      gap: 10px;\n      font-size: 1.1em;\n      letter-spacing: 0.5px;\n    `,t.innerHTML=`\n      <svg width="32" height="32" viewBox="0 0 48 48" fill="none" style="margin-right: 6px;">\n        <ellipse cx="24" cy="20" rx="12" ry="10" fill="#fff"/>\n        <ellipse cx="18" cy="20" rx="2.5" ry="3" fill="#6366f1"/>\n        <ellipse cx="30" cy="20" rx="2.5" ry="3" fill="#6366f1"/>\n        <ellipse cx="18" cy="20" rx="1.2" ry="1.5" fill="#fff"/>\n        <ellipse cx="30" cy="20" rx="1.2" ry="1.5" fill="#fff"/>\n        <rect x="20" y="26" width="8" height="2" rx="1" fill="#6366f1"/>\n      </svg>\n      <span>${this.botName}</span>\n    `,this.messagesContainer=document.createElement("div"),this.messagesContainer.style.cssText="\n      flex: 1;\n      overflow-y: auto;\n      padding: 18px 15px 10px 15px;\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n      background: transparent;\n    ";const n=document.createElement("div");n.style.cssText="\n      padding: 15px;\n      border-top: 1px solid #eee;\n      display: flex;\n      background: rgba(255,255,255,0.95);\n    ",this.input=document.createElement("input"),this.input.type="text",this.input.placeholder="Type your message...",this.input.setAttribute("aria-label","Type your message"),this.input.style.cssText="\n      flex: 1;\n      padding: 10px 16px;\n      border: 1px solid #ddd;\n      border-radius: 20px;\n      margin-right: 8px;\n      font-size: 1em;\n      outline: none;\n      background: #f9fafb;\n      color: #222;\n      transition: border 0.2s;\n    ",this.input.onfocus=()=>{this.input.style.border=`1.5px solid ${this.theme.primaryColor}`},this.input.onblur=()=>{this.input.style.border="1px solid #ddd"};const e=document.createElement("button");e.setAttribute("aria-label","Send message"),e.innerHTML=`\n      <svg width="24" height="24" fill="none" viewBox="0 0 24 24"><path d="M2 21l21-9-21-9v7l15 2-15 2v7z" fill="${this.theme.primaryColor}"/></svg>\n    `,e.style.cssText=`\n      background: ${this.theme.primaryColor};\n      color: white;\n      border: none;\n      border-radius: 50%;\n      width: 40px;\n      height: 40px;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: background 0.2s;\n    `,e.onmouseenter=()=>{e.style.background="#6366f1"},e.onmouseleave=()=>{e.style.background=this.theme.primaryColor},n.appendChild(this.input),n.appendChild(e),this.chatWindow.appendChild(t),this.chatWindow.appendChild(this.messagesContainer),this.chatWindow.appendChild(n),this.container.appendChild(this.chatWindow),this.container.appendChild(this.button),document.body.appendChild(this.container),setTimeout(()=>{this.container.style.opacity="1",this.container.style.transform="translateX(0)"},3e3),this.button.addEventListener("click",()=>this.toggleChat()),e.addEventListener("click",()=>this.sendMessage()),this.input.addEventListener("keypress",t=>{"Enter"===t.key&&this.sendMessage()}),this.addMessage("bot",this.welcomeMessage)}toggleChat(){const t="none"===this.chatWindow.style.display;this.chatWindow.style.display=t?"flex":"none",t&&(this.chatWindow.style.animation="chatbot-slide-in 0.4s cubic-bezier(.4,2,.6,1)",setTimeout(()=>{this.chatWindow.style.animation=""},400),this.input.focus())}async sendMessage(){const t=this.input.value.trim();if(t){this.input.value="",this.addMessage("user",t),this.showTyping();try{const n={query:t};this.widgetId&&(n.widgetId=this.widgetId);const e=await fetch(`${this.apiUrl}/query/ask`,{method:"POST",headers:{"Content-Type":"application/json","X-Client-ID":this.clientId},body:JSON.stringify(n)}),i=await e.json();if(this.hideTyping(),"SUCCESS"!==i.status)throw new Error(i.message||"Failed to get response");this.addMessage("bot",i.answer)}catch(t){this.hideTyping(),this.addMessage("error","Sorry, I encountered an error. Please try again."),console.error("Chatbot error:",t)}}}showTyping(){this.isTyping=!0,this.typingBubble=document.createElement("div"),this.typingBubble.className="chatbot-typing-bubble",this.typingBubble.style.cssText="\n      margin: 8px 0;\n      padding: 8px 16px;\n      border-radius: 20px;\n      max-width: 60%;\n      background: #f1f1f1;\n      color: #6366f1;\n      align-self: flex-start;\n      box-shadow: 0 2px 8px rgba(99,102,241,0.08);\n      display: flex;\n      align-items: center;\n      gap: 6px;\n    ",this.typingBubble.innerHTML='\n      <span>Bot is typing</span>\n      <span class="chatbot-typing-dots" style="display:inline-block;width:24px;">\n        <span style="display:inline-block;width:6px;height:6px;background:#6366f1;border-radius:50%;margin-right:2px;animation:chatbot-dot 1s infinite alternate;"></span>\n        <span style="display:inline-block;width:6px;height:6px;background:#6366f1;border-radius:50%;margin-right:2px;animation:chatbot-dot 1s 0.2s infinite alternate;"></span>\n        <span style="display:inline-block;width:6px;height:6px;background:#6366f1;border-radius:50%;animation:chatbot-dot 1s 0.4s infinite alternate;"></span>\n      </span>\n    ',this.messagesContainer.appendChild(this.typingBubble),this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight}hideTyping(){this.isTyping=!1,this.typingBubble&&this.typingBubble.parentNode&&this.typingBubble.parentNode.removeChild(this.typingBubble)}addMessage(t,n){this.isTyping&&this.hideTyping();const e=document.createElement("div");e.style.cssText=`\n      margin: 8px 0;\n      padding: 12px 18px;\n      border-radius: 22px;\n      max-width: 80%;\n      word-wrap: break-word;\n      font-size: 1em;\n      box-shadow: 0 2px 8px rgba(99,102,241,0.08);\n      transition: background 0.2s, color 0.2s;\n      ${"user"===t?`\n        background: ${this.theme.primaryColor};\n        color: white;\n        align-self: flex-end;\n        margin-left: auto;\n      `:"error"===t?"\n        background: #ff4444;\n        color: white;\n      ":`\n        background: #f1f1f1;\n        color: ${this.theme.textColor};\n        align-self: flex-start;\n      `}\n    `,e.textContent=n,this.messagesContainer.appendChild(e),this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight}}const style=document.createElement("style");style.innerHTML="\n@keyframes chatbot-slide-in {\n  0% { opacity: 0; transform: translateY(40px) scale(0.95); }\n  100% { opacity: 1; transform: translateY(0) scale(1); }\n}\n@keyframes chatbot-dot {\n  0% { opacity: 0.3; transform: translateY(0); }\n  100% { opacity: 1; transform: translateY(-4px); }\n}\n",document.head.appendChild(style),window.ChatbotService=ChatbotService;